[4, 5, 6, 7] ~~ x -> x ^ 2
---

let p = x, y -> x + y
p(123, 566)
---

let a = new Array
a += 1
a += 2
a += 3
---

let a = [1, 322, -534, 231, 331]
let s = 0
for i = 0; i < |a|; ++i {
	s += a[i]
}
[s, a.sum()]
---

[5, 6, 7] + [8, 9, 10]
---

let a = 5
let b = a = 12
---

'salut' × 5
---

π
---

~[1, 2, 3, 4, 5]
---

~"Salut ça va ?"
---

let a = [1, 2, 3, 4, 5]
a[1:3]
---

|'this is a string'|
---

let o = {a: 'yo', b: 12, c: []}
o.c += o.a
---

let x = 5
let res = if x == 5 then 'ok' else 'no' end
---

let f = -> 12
f()
---

let f = -> -> -> 12
f()()()
---

let f = -> -> 12
let g = f()
g()
---

(x -> x + 0.5)(12)
---

let f = x -> [x, x, x]
f(12)
---

let i = 0
let s = 0
while (i < 10) {
	s += i
	i++
}
s
---

let s = 0
for let i = 0; i < 10; i += 2 do
	s += i
end
s
---

let s = 0
for v in [1, 2, 3, 4] {
	s += v
}
s
---

['yo', 'toto', 'salut'] ~~ x -> x + ' !'
---

[1.2, 321.42, 23.15] ~~ x -> x * 1.7
---

let a = 5
let b = 12
a <=> b
'a: ' + a + ', b: ' + b
---

let a = [1, 2, 3, 4]
a[0] <=> a[3]
a
---

let p = +
p(561, 4324)
---

Number.sqrt(500)
---

Number.pow(2, 10)
---

Number.sin(- π / 2)
---

String.replace('bonjour à tous', 'o', '_')
---

String.map('salut', x -> '(' + x + ')')
---

String.split('bonjour_*_ça_*_va', '_*_')
---

Array.average([1, 2, 3, 4, 5, 6])
---

[1, 'yo', true].size()
---

[3, 4, 5].map(x -> x ^ 2)
---

Array.map2([1, 'yo ', []], [12, 55, 9], (x, y -> x + y))
---

Number
---

String
---

Array
---

+
---

+.class
---

%(48, 5)
---

(x, y -> x + y).class
---

null.class
---

let s = ''
for v in ['salut ', 'ça ', 'va ?'] {
	s += v
}
s
---

let a = {a: 32, b: 'toto', c: false}
|a|
---

'bonjour'[2:5]
---

'salut ' + 'ça va ?'
---

let a = [1, 2, 3]
a[1] = 12
a
---

2.5 × 4.7
---

let a = [23, 23, true, '', [], 123]
|a|
---

[] + 1 + 2 + 3
---

1; 2
---

let f = function(x) {
	if (x < 10) {
		return true
	}
	return 12
}
[f(5), f(20)]
---

let a = {b: 12, c: 5}
a.b *= 10
---

[1, 2, 3] ~~ x -> [x]
---

let p = /
p(48, 12)
---

let p = ^
p(2, 11)
---

Number.floor(5.9)
---

Number.max(5, 12)
---

String.toUpper('salut')
---

String.startsWith('salut ça va', 'salut')
---

String.toArray('salut')
---

'salut'.toArray()
---

'bonjour'[3]
---

// Project Euler 1
let s = 0
for i = 0; i < 1000; ++i {
	if i % 3 == 0 or i % 5 == 0 {
		s += i
	}
}
s
---

// Project Euler 2
let i = 1
let j = 2
let s = 0
while (j < 4000000) {
	let o = j
	j = i + j
	i = o
	if (i % 2 == 0) s += i
}
s
---

// Project Euler 5
2 ^ 4 * 3 ^ 2 * 5 * 7 * 11 * 13 * 17 * 19
---

// Project Euler 16
var digits = [1]

for p = 0; p < 1000; p++ {
	for j = 0; j < digits.size(); ++j {
		digits[j] *= 2
	}
	for i = 0; i < digits.size(); ++i {
		if (9 < digits[i]) {
			digits[i] %= 10
			if (i < digits.size() - 1) {
				digits[i + 1]++
			} else {
				digits += 1
				break
			}
		}
	}
}
print(~digits)
digits.sum()
---

// Project Euler 20
var digits = [1]

for p = 1; p <= 100; p++ {
	for j = 0; j < digits.size(); ++j {
		digits[j] *= p
	}
	for i = 0; i < digits.size(); ++i {
		if (9 < digits[i]) {
			let m = digits[i] % 10
			var q = (digits[i] - m) / 10
			digits[i] = m
			if (i < digits.size() - 1) {
				digits[i + 1] += q
			} else {
				digits += q
				break
			}
		}
	}
	var n = digits.size() - 1
	while (9 < digits[n]) {
		let mo = digits[n] % 10
		let qu = (digits[n] - mo) / 10
		digits[n] = mo
		digits += qu
		n++
	}
}
print(~digits)
digits.sum()
---

// Project Euler 34
let sum = 0;
for (let _ = 3; _ < 41000; ++_) {
	let n, s = _, 0
	while (n) {
		let d, f, x = n % 10, 1, 2
		for ; x <= d; ++x { f ×= x }
		s += f
		n = (n - d) / 10
		if (s > _) break;
	}
	if (s == _) sum += _
}
return sum
---

// Project Euler 7
let is_prime = function(n) {

	if !(n % 2) or n < 2 or (!(n % 3) and n != 3) return false

	for let k = 1; 36 * k * k - 12 * k < n; k++ {
		if !(n % (6 * k + 1)) or !(n % (6 * k - 1)) return false
	}
	return true
}

var i, n = 1, 1
while (i < 10001) {
	n += 2
	if is_prime(n) i++
}
return n
